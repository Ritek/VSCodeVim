// Place your key bindings in this file to override the defaults
[
	// Useful keybindings set by default
	// ctrl + => zoom in (whole editor)
	// ctrl - => zoom out (whole editor)
	// yy => yank line
	// dd => delete line
	// cw => clear word and enter insert mode
	// shift i => enter insert at the start of the line
	// shift a => enter insert at the end of the line
	// ctrl . => show code action menu
	// ctrl shift . => toggle breadcrumbs menu

	// REMOVE KEYBINDS
	// {
	//   "key": "ctrl+shift+n",
	//   "command": "-workbench.action.newWindow"
	// },
	{
		"key": "ctrl+shift+t",
		"command": "-workbench.action.reopenClosedEditor"
	},
	{
		"key": "ctrl+z",
		"command": "-inlineChat.unstash",
		"when": "inlineChatHasStashedSession && !editorReadonly"
	},
	{
		"key": "ctrl+z",
		"command": "-extension.vim_ctrl+z",
		"when": "editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.openRecent"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+t",
		"command": "-workbench.action.showAllSymbols"
	},
	// TERMINAL NAVIGATION
	{
		"key": "ctrl+shift+t",
		"command": "workbench.action.togglePanel"
	},
	{
		"key": "ctrl+t",
		"command": "workbench.action.terminal.new",
		"when": "terminalIsOpen && terminalFocus"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalIsOpen && terminalFocus"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalIsOpen && terminalFocus"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.terminal.kill",
		"when": "terminalIsOpen && terminalFocus"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "terminalIsOpen && terminalFocus"
	},
	// NAVIGATE POPUPS
	{
		"key": "ctrl+n",
		"command": "selectNextSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{
		"key": "ctrl+p",
		"command": "selectPrevSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	// FILE TREE
	{
		"command": "workbench.action.toggleSidebarVisibility",
		"key": "ctrl+e"
	},
	{
		"command": "workbench.files.action.focusFilesExplorer",
		"key": "ctrl+e",
		"when": "editorTextFocus"
	},
	{
		"command": "workbench.files.action.refreshFilesExplorer",
		"key": "ctrl+shift+r",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"command": "workbench.action.focusNextGroup",
		"key": "ctrl+l",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"command": "renameFile",
		"key": "r",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "n",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "shift+n",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "x",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "p",
		"command": "filesExplorer.paste",
		"when": "filesExplorerFocus && !inputFocus"
	},
	// SCROLL POPUPS
	{
		"key": "h",
		"command": "editor.action.scrollLeftHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "j",
		"command": "editor.action.scrollDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "k",
		"command": "editor.action.scrollUpHover",
		"when": "editorHovered"
	},
	{
		"key": "l",
		"command": "editor.action.scrollRightHover",
		"when": "editorHoverFocused"
	},
	// SEARCH FUNCTION
	{
		"key": "ctrl+h",
		"command": "actions.find",
		"when": "editorFocus && editorIsOpen"
	},
	{
		"key": "ctrl+h",
		"command": "closeFindWidget",
		"when": "editorFocus && editorIsOpen && findWidgetVisible"
	},
	{
		"key": "ctrl+shift+h",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus && editorIsOpen"
	},
	{
		"key": "ctrl+n",
		"command": "editor.action.nextMatchFindAction",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+p",
		"command": "editor.action.previousMatchFindAction",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+e",
		"command": "toggleFindCaseSensitive",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+w",
		"command": "toggleFindWholeWord",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+r",
		"command": "toggleFindRegex",
		"when": "editorFocus && findWidgetVisible"
	},

	// GIT MENU
	// Space opens file but keeps focus on workbench
	// GIT actions can only be performed if file is open
	{
		"key": "ctrl+a",
		"command": "git.stage",
		"when": "focusedView == 'workbench.scm'"
	},
	{
		"key": "ctrl+d",
		"command": "git.unstage",
		"when": "focusedView == 'workbench.scm'"
	},
	{
		"key": "ctrl+shift+a",
		"command": "git.stageAll",
		"when": "focusedView == 'workbench.scm'"
	},
	{
		"key": "ctrl+shift+d",
		"command": "git.unstageAll",
		"when": "focusedView == 'workbench.scm'"
	},
	{
		"key": "ctrl+shift+s",
		"command": "git.stashStaged",
		"when": "focusedView == 'workbench.scm'"
	},
	{
		"key": "ctrl+shift+u",
		"command": "git.stashPop",
		"when": "focusedView == 'workbench.scm'"
	},
	{
		"key": "ctrl+shift+c",
		"command": "git.commitAllSigned",
		"when": "focusedView == 'workbench.scm'"
	}
]
